manifest {
    author = 'Patrick Blaney'
    homePage = 'https://github.com/pblaney/mgp1000'
    description = 'Myeloma Genome Project 1000 Bioinformatics Nextflow Pipeline'
    name = 'MGP1000'
}

report {
    enabled = true
    file = "nextflow_report.html"
}

trace {
    enabled = true
    fields = "task_id,hash,native_id,process,tag,name,status,exit,module,container,cpus,time,disk,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,rchar,wchar,syscr,syscw,read_bytes,write_bytes"
    file = "trace.txt"
    raw = true
}

timeline {
    enabled = true
    file = "timeline_report.html"
}

// Set email notification scope if email is provided
params.email = null

notification {
    
    if( "${params.email}" ) {
        enabled = true
        to = "${params.email}"
        from = "${params.email}"
    } else {
        enabled = false
    }
}


// #################################################### \\
// ~~~~~~~~~~~~~~ PROFILE CONFIGURATION ~~~~~~~~~~~~~~~ \\

params.singularity_module = null

profiles {

    // Profile for Preprocessing step of pipeline using Slurm executor
    preprocessing {
        
        singularity.enabled = true
        singularity.autoMounts = true

        // Set the Singularity module if one was provided as input parameter
        if( params.singularity_module ) {
            process.module = "${params.singularity_module}"
        }

        process.executor = 'slurm'

        process {

            errorStrategy = "retry"

            withName: revertMappedBam_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 1
                maxRetries = 2
                memory = { 16.GB * task.attempt } // Max of 32.GB 
                time = '18h'
            }
            withName: bamToFastq_biobambam {
                container = "containers/biobambam-2.0.87.simg"
                cpus = 1
                maxRetries = 4
                memory = { 256.MB * task.attempt } // Max of 1.GB
                time = '36h'
            }
            withName: fastqTrimming_trimmomatic {
                container = "containers/trimmomatic-0.36.simg"
                cpus = 4
                maxRetries = 4
                memory = { 6.GB * task.attempt } // Max of 24.GB
                time = '72h'
            }
            withName: fastqQualityControlMetrics_fastqc {
                container = "containers/fastqc-0.11.9.simg"
                cpus = 1
                maxRetries = 4
                memory = { 256.MB * task.attempt } // Max of 1.GB
                time = '6h'
            }
            withName: alignment_bwa {
                container = "containers/bwa-0.7.17-sambamba-0.7.1.simg"
                cpus = 6
                maxRetries = 4
                memory = { 4.GB * task.attempt } // Max of 16.GB
                time = '72h'
            }
            withName: fixMateInformationAndSort_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 1
                maxRetries = 4
                memory = { 8.GB * task.attempt } // Max of 32.GB
                time = '36h'
            }
            withName: markDuplicatesAndIndex_sambamba {
                container = "containers/sambamba-0.7.1.simg"
                cpus = 2
                maxRetries = 4
                memory = { 2.GB * task.attempt } // Max of 8.GB
                time = '36h'
            }
            withName: downsampleBam_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 1
                maxRetries = 4
                memory = { 8.GB * task.attempt } // Max of 32.GB
                time = '6h'
            }
            withName: baseRecalibrator_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 1
                maxRetries = 2
                memory = { 4.GB * task.attempt } // Max of 8.GB
                time = '6h'
            }
            withName: applyBqsr_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 1
                maxRetries = 4
                memory = { 1.GB * task.attempt } // Max of 4.GB
                time = '24h'
            }
            withName: collectWgsMetrics_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 1
                maxRetries = 4
                memory = { 2.GB * task.attempt } // Max of 8.GB
                time = '12h'
            }
            withName: collectGcBiasMetrics_gatk {
                container = "containers/gatk-4.1.7.0.simg"
                cpus = 1
                maxRetries = 4
                memory = { 2.GB * task.attempt } // Max of 8.GB
                time = '12h'
            }
            withName: extremeBamQualityControl_qualimap {
                container = "containers/qualimap-2.2.1.simg"
                cpus = 2
                memory = 12.GB
                time = '24h'
            }
        }
    }


    // Profiles for local testing of pipeline steps in development environment using Docker, likely will require
    // configuration of the daemon's resources. This can be done within the 'Preferences' > 'Resources' tab of the 
    // Docker Desktop Dashboard for macOS
    
    // Preprocessing Dev Profile
    dev_preprocessing {

        docker.enabled = true

        process {

            withName: revertMappedBam_gatk {
                container = "patrickblaneynyu/mgp1000:gatk-4.1.7.0"
                memory = 12.GB
            }
            withName: bamToFastq_biobambam {
                container = "patrickblaneynyu/mgp1000:biobambam-2.0.87"
            }
            withName: fastqTrimming_trimmomatic {
                container = "patrickblaneynyu/mgp1000:trimmomatic-0.36"
                cpus = 4
                memory = 12.GB
            }
            withName: fastqQualityControlMetrics_fastqc {
                container = "patrickblaneynyu/mgp1000:fastqc-0.11.9"
            }
            withName: alignment_bwa {
                container = "patrickblaneynyu/mgp1000:bwa-0.7.17-sambamba-0.7.1"
                cpus = 4
                memory = 12.GB
            }
            withName: fixMateInformationAndSort_gatk {
                container = "patrickblaneynyu/mgp1000:gatk-4.1.7.0"
                memory = 12.GB
            }
            withName: markDuplicatesAndIndex_sambamba {
                container = "patrickblaneynyu/mgp1000:sambamba-0.7.1"
                cpus = 2
            }
            withName: downsampleBam_gatk {
                container = "patrickblaneynyu/mgp1000:gatk-4.1.7.0"
                memory = 12.GB
            }
            withName: baseRecalibrator_gatk {
                container = "patrickblaneynyu/mgp1000:gatk-4.1.7.0"
                memory = 12.GB
            }
            withName: applyBqsr_gatk {
                container = "patrickblaneynyu/mgp1000:gatk-4.1.7.0"
                memory = 10.GB
            }
            withName: collectWgsMetrics_gatk {
                container = "patrickblaneynyu/mgp1000:gatk-4.1.7.0"
                memory = 12.GB
            }
            withName: collectGcBiasMetrics_gatk {
                container = "patrickblaneynyu/mgp1000:gatk-4.1.7.0"
                memory = 12.GB
            }
            withName: extremeBamQualityControl_qualimap {
                container = "patrickblaneynyu/mgp1000:qualimap-2.2.1"
                cpus = 2
                memory = 12.GB
            }
        }
    }

    // Germline Variant Analysis Dev Profile
    dev_germline {

        docker.enabled = true

        process {

            withName: telomereLengthEstimation_telseq {
                container = "patrickblaneynyu/mgp1000:telseq-0.0.1"
                memory = 1.GB
            }
            withName: haplotypeCaller_gatk {
                container = "patrickblaneynyu/mgp1000:gatk-4.1.7.0"
                memory = 14.GB
                cpus = 2
            }
            withName: createGenomicsDb_gatk {
                container = "patrickblaneynyu/mgp1000:gatk-4.1.7.0"
                memory = 14.GB
            }
            withName: jointGenotyping_gatk {
                container = "patrickblaneynyu/mgp1000:gatk-4.1.7.0"
                memory = 16.GB
                cpus = 2
            }
            withName: excessHeterozygosityHardFilter_gatk {
                container = "patrickblaneynyu/mgp1000:gatk-4.1.7.0"
                memory = 8.GB
            }
            withName: indelVariantRecalibration_gatk {
                container = "patrickblaneynyu/mgp1000:gatk-4.1.7.0"
                memory = 16.GB
            }
            withName: snvVariantRecalibration_gatk {
                container = "patrickblaneynyu/mgp1000:gatk-4.1.7.0"
                memory = 16.GB
            }
        }
    }
}